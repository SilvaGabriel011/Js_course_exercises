day11 26062025
    BUILD PROJECT WITH VISUAL USER INTERFACE

    GUESS MY NUMBER PROJECT
        IT WILL NEED
            CSS FILE
            HTML FILE
            JAVASCRIPT FILE
        All of the interface is implemented in html 
        document.querySelector('.message')
            first select the ELEMENT
                .textContent
                    property 
        we will make js interact with a web page

            DOM MANIPULATION
                document object model
                    structured representation of html documents
                    allows js to acces html elements and styles to manipulate them 
                    we will be able to change
                        text
                        atributes
                        style - CSS
                basicaly a conexion point between html doc and js codes
                in the tree each html element is an object
                Document
                └── <html> (first child)
                    ├── <head> (siblings)
                    │   └── <title>
                    │       └── "Minha Página"
                    └── <body> (siblings)
                        ├── <h1>
                        │   └── "Título Principal"
                        ├── <p>
                        │   └── "Parágrafo de exemplo."
                        └── <ul>
                            ├── <li>
                            │   └── "Item 1"
                            ├── <li>
                            │   └── "Item 2"
                            └── <li>
                                └── "Item 3"
                for each element in html there is one element node in the DOM tree
                    to acces and interact with this nodes we use JS 
                    the dom always starts with the document object
                        document is a special object that we have acess in js 
                            the entry point
                        we need it to start selectin elements
                the first child element is usually HTML element
                whatever is in the HTML DOCUMENT HAS TO BE IN THE DOM
                    so the dom is a complet representation of the html document
                the dom its not part of the JS language
                    the dom and dom methods are acctually part of web API'S
                THE WEB API'S (application programing interfaces)
                    are like libraries that browsers implement 
                        we can acces from Js code
                
        selecting and manipulating elements
            document.querySelector('.message').textContent = 'Correct number !!'
            changing the value of an element
            we need the html to get all of the class names that has values for this PROJECT
            in an input field to get the actual value we use
                document.querySelector('.element').value
        
        handling click events
            the code will reacts to something that happens in the dom
            for that we will need an event listener
                mouse click = event
                mouse moving = event
                key press = event
                with an event listener we can wait for a certain event to happen and react to it
            in order to listen to the event we should place a listener where the event could happen 
            so when we click on the button, somethin SHOULD HAPPEN 
            
            select the button element
            document.querySelector('.classOfButton')
            now the button needs the event listener method
                and as a method there are multipple ways to listen to events
                addEventListener("nameOfEvent",what should the event listener do)
                        what to do == function (its called eventHandler)
                            what should happens when the button is pressed
                real exemple:

                document.querySelector('.check').addEventListener('click', function () {
                console.log(document.querySelector('.guess').value);
                    })
                the eventHandler function will only be called when the event happens

day12 27062026
    implementing the game logic
        its good to have data also in the code not only in the dom 
    
    manipulating css styles
        to manipulate the style of the hole page
            for that we need to select the hole body of the page
            document.querySelector('body').style.backgroundColor = '#60b347' (green)
                dosen't comes with dot because its an element (like p, a, div, head...)
            it needs to be inside an string 
        like this we are no changing the real css file 
            this styles are set like inline style
        so we need to use the style propertie
            inside of the style we acces the propertie wich will be changed (in cammelCase notation
                wich is different from what regular css uses (cammel-case)
            )
            and then the value needs to be a string 

    refactoring code
        restructure the code but wihtou changin what it does
            improve code
            eliminate duplicates
        a good refactoring technique is construct functions

day12 280625
    modal window
        ui component
        manipulating classes is the main way to manipulate pages
        select elements that will be used
            and organized them each in its on variable 
            for this project we dont need to create the html code for the window, it's already there 
                but is hidden by the css
            when we use querySelector as a selector when we have multiples elements (witch the same class name)
                the first element with the name will be selected 
            for selecting all elements with equal class names 
                document.querySelectorAll
                    it will return a nodelist 
                        it works like an array
                        so it can be looped in 
    
    how to manipulate classes
        in order to response to a click event we will attach and eventHandler to the element 
        modal.classList.remove('hidden');
            the classList method has a properties
                one of them is remove
                    and then we choose what will be removed by it
                    ic can be removed more than one class
                    class.classList.remove('class1','class2'...)    
                    it doesn't require the dot before the class
                        the dot selects the class
                        its just passing the name of the class
                            as a string
            adding and removing class are the main way to change styles dynamicaly 
                in web pages
                thats because a class agragates many styles in itself 
        when we have display : none
            it sets to not visible
            so to make it visible we need to have display : block
        usually when you need to manipulate styles on a page 
            export the styles in a class and then manipulate the class using properties (classList.remove, classList.add ...)
        when declaring the function that will be used after the evendlistener/handler event (clik,pass,move...) we dont call it, we just pass the variable 
        example
            const functionVariable = function(){block of execution}
            document.querySelector('.class').addEventListener('click', functionVariable)
                so we set the function witthou parentisis
                    function
        each class is a container with properties
            manipulating then is changing styles

    how to handle keypress events
        escape key as event 
        keyboard events are called global events 
            document.addEventListener
                document.addEventListener('keyup')
                    the event happens as soon as the key is stoped being pressed
                document.addEventListener("keypress")
                     is fired continously as we keep finger on the key 
                document.addEventListener("keydown")
                    is triggered as soon as we press the button
            to know what key was pressed we will use an eventHandler 
                the keypressed is store as soon as the event occour in the eventHandler 
                everytime that, one key is pressed Js generate an object
                    wich has all the information about the event
            in order to look inside the object that is created we give the function, that will be executed in, a parameter 
                document.addEventListener('keydown',function(event){})
                    when the function gets executed, the event will be passed as an argument 
                    so the object that was created with the keyboardEvent has the 'event' name as we passed event as argument of the function
            exemple
                const modal = document.querySelector('.modal');
                const overlay = document.querySelector('.overlay');
                const btnCloseModal = document.querySelector('.close-modal');
                const btnsOpenModal = document.querySelectorAll('.show-modal');
                const closeModal = function () {
                modal.classList.add('hidden');
                overlay.classList.add('hidden');
                };
                const openModal = function () {
                modal.classList.remove('hidden');
                overlay.classList.remove('hidden');
                };

                    for (let i = 0; i < btnsOpenModal.length; i++)
                    btnsOpenModal[i].addEventListener('click', openModal);

                    btnCloseModal.addEventListener('click', closeModal);

                    overlay.addEventListener('click', closeModal);

                    document.addEventListener('keydown', function (event) 
                    if (event.key === 'Escape' && (!modal.classList.contains('hidden'))) {
                        // if the keypressed was escape and the  modal does not contain the hidden class wich means that its showing the modal we close the modal by presing the escape key
                        closeModal();
                    });

day13 29062025
    pig game
        classList.toggle
            if the class is there, removes it
            if not put it in 